<link href="css/Listings/list-entry.css" rel="stylesheet" />

@if(ListDetails != null)
{
<div class="listing-entry-wrapper" style="margin-bottom: 10px;">
    <div class="listing-entry-image">
        <img src=@ListDetails.MainImgSrc style="padding: 10px; height: 100%; width: 100%; object-fit: contain">
    </div>
    <div class="listing-entry-details">
        <div class="bold-text buffered">
            @ListDetails.Address
        </div>
        <div class="heading-text buffered" style="margin-top:-20px">
            @ListDetails.Price
        </div>
        <div class="buffered">
            @ListDetails.LongDetails
        </div>
    </div>
    <div class="listing-entry-actions">
        <div class="input-group center" style="margin-left:30px">
           <button type="button" class="btn btn-danger big-listing-button" @onclick="@(() => ShowModal(ListDetails.Address))">Unlist</button>
           <button type="button" class="btn btn-warning big-listing-button" style="margin-left:30px">Edit</button>
        </div>
    </div>
</div>
}

@code {
    [Parameter]
    public HouseListing ListDetails { get; set; }

    [CascadingParameter] public IModalService Modal { get; set; } = default!;
    void ShowModal(string address)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(ConfirmUnlistModal.Address), address);
        Modal.Show<ConfirmUnlistModal>("Confirm Action", parameters);
    }
}